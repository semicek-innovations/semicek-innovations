generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String               @id @default(uuid())
  email              String               @unique
  password           String
  name               String
  username           String               @unique
  birthdate          DateTime?
  avatarUrl          String?
  preferences        Json? // visibility, notifications, etc.
  role               Role                 @default(USER)
  isActive           Boolean              @default(true)
  stripeCustomerId   String?              @unique(map: "user_stripe_customer_id_key")
  subscription       Subscription[]
  PasswordResetToken PasswordResetToken[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@map("password_reset_tokens")
}

enum SubscriptionPlan {
  FREE
  PRO
  PREMIUM
}

enum SubscriptionStatus {
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

model Subscription {
  id          String           @id @default(uuid())
  userId      String
  user        User             @relation(fields: [userId], references: [id])
  stripeSubId String           @unique(map: "subscription_sub_id_key")
  priceId     String
  plan        SubscriptionPlan
  status      SubscriptionStatus
  endDate     DateTime?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([userId])
  @@map("subscription")
}
